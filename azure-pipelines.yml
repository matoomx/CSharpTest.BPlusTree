# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
variables:
  solution: CSharpTest.Net.Collections.sln
  buildConfiguration: Release
stages:
    - stage: Build
      jobs:
        - job: A
          displayName: Build
          pool:
            vmImage: 'windows-latest'
          steps:
            - task: UseDotNet@2
              displayName: Use .NET 6.x
              inputs:
                version: 6.x
                performMultiLevelLookup: true
                includePreviewVersions: $(dotnetIncludePreviewVersions)
            - task: UseDotNet@2
              displayName: Use .NET 7.x #Multi targeted
              inputs:
                version: 7.x
                performMultiLevelLookup: true
                includePreviewVersions: $(dotnetIncludePreviewVersions)
            - task: DotNetCoreCLI@2
              displayName: Run dotnet restore
              inputs:
                command: restore
                projects: $(solution)
            - task: DotNetCoreCLI@2
              displayName: Run dotnet build
              inputs:
                command: build
                projects: $(solution)
                arguments: '--configuration $(buildConfiguration) --no-restore -p:ContinuousIntegrationBuild=true'
            - task: PublishPipelineArtifact@1
              displayName: Publish nupkg
              inputs:
                targetPath: $(Build.ArtifactStagingDirectory)
                artifactName: NuGet
            - task: PublishPipelineArtifact@1
              displayName: Publish build artifacts
              inputs:
                targetPath: $(Build.SourcesDirectory)
                artifactName: build_output